<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itswcg.todo.mapper.DjangoAdminLogMapper">
  <resultMap id="BaseResultMap" type="com.itswcg.todo.model.DjangoAdminLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="action_time" jdbcType="TIMESTAMP" property="actionTime" />
    <result column="object_repr" jdbcType="VARCHAR" property="objectRepr" />
    <result column="action_flag" jdbcType="SMALLINT" property="actionFlag" />
    <result column="content_type_id" jdbcType="INTEGER" property="contentTypeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.itswcg.todo.model.DjangoAdminLog">
    <result column="object_id" jdbcType="LONGVARCHAR" property="objectId" />
    <result column="change_message" jdbcType="LONGVARCHAR" property="changeMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, action_time, object_repr, action_flag, content_type_id, user_id
  </sql>
  <sql id="Blob_Column_List">
    object_id, change_message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.itswcg.todo.model.DjangoAdminLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from django_admin_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.itswcg.todo.model.DjangoAdminLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from django_admin_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from django_admin_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from django_admin_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itswcg.todo.model.DjangoAdminLogExample">
    delete from django_admin_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itswcg.todo.model.DjangoAdminLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into django_admin_log (action_time, object_repr, action_flag, 
      content_type_id, user_id, object_id, 
      change_message)
    values (#{actionTime,jdbcType=TIMESTAMP}, #{objectRepr,jdbcType=VARCHAR}, #{actionFlag,jdbcType=SMALLINT}, 
      #{contentTypeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{objectId,jdbcType=LONGVARCHAR}, 
      #{changeMessage,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itswcg.todo.model.DjangoAdminLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into django_admin_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actionTime != null">
        action_time,
      </if>
      <if test="objectRepr != null">
        object_repr,
      </if>
      <if test="actionFlag != null">
        action_flag,
      </if>
      <if test="contentTypeId != null">
        content_type_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="changeMessage != null">
        change_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actionTime != null">
        #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="objectRepr != null">
        #{objectRepr,jdbcType=VARCHAR},
      </if>
      <if test="actionFlag != null">
        #{actionFlag,jdbcType=SMALLINT},
      </if>
      <if test="contentTypeId != null">
        #{contentTypeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeMessage != null">
        #{changeMessage,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itswcg.todo.model.DjangoAdminLogExample" resultType="java.lang.Long">
    select count(*) from django_admin_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update django_admin_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.actionTime != null">
        action_time = #{record.actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.objectRepr != null">
        object_repr = #{record.objectRepr,jdbcType=VARCHAR},
      </if>
      <if test="record.actionFlag != null">
        action_flag = #{record.actionFlag,jdbcType=SMALLINT},
      </if>
      <if test="record.contentTypeId != null">
        content_type_id = #{record.contentTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.objectId != null">
        object_id = #{record.objectId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.changeMessage != null">
        change_message = #{record.changeMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update django_admin_log
    set id = #{record.id,jdbcType=INTEGER},
      action_time = #{record.actionTime,jdbcType=TIMESTAMP},
      object_repr = #{record.objectRepr,jdbcType=VARCHAR},
      action_flag = #{record.actionFlag,jdbcType=SMALLINT},
      content_type_id = #{record.contentTypeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      object_id = #{record.objectId,jdbcType=LONGVARCHAR},
      change_message = #{record.changeMessage,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update django_admin_log
    set id = #{record.id,jdbcType=INTEGER},
      action_time = #{record.actionTime,jdbcType=TIMESTAMP},
      object_repr = #{record.objectRepr,jdbcType=VARCHAR},
      action_flag = #{record.actionFlag,jdbcType=SMALLINT},
      content_type_id = #{record.contentTypeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itswcg.todo.model.DjangoAdminLog">
    update django_admin_log
    <set>
      <if test="actionTime != null">
        action_time = #{actionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="objectRepr != null">
        object_repr = #{objectRepr,jdbcType=VARCHAR},
      </if>
      <if test="actionFlag != null">
        action_flag = #{actionFlag,jdbcType=SMALLINT},
      </if>
      <if test="contentTypeId != null">
        content_type_id = #{contentTypeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeMessage != null">
        change_message = #{changeMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.itswcg.todo.model.DjangoAdminLog">
    update django_admin_log
    set action_time = #{actionTime,jdbcType=TIMESTAMP},
      object_repr = #{objectRepr,jdbcType=VARCHAR},
      action_flag = #{actionFlag,jdbcType=SMALLINT},
      content_type_id = #{contentTypeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      object_id = #{objectId,jdbcType=LONGVARCHAR},
      change_message = #{changeMessage,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itswcg.todo.model.DjangoAdminLog">
    update django_admin_log
    set action_time = #{actionTime,jdbcType=TIMESTAMP},
      object_repr = #{objectRepr,jdbcType=VARCHAR},
      action_flag = #{actionFlag,jdbcType=SMALLINT},
      content_type_id = #{contentTypeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>